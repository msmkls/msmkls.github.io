{
    "version": "https://jsonfeed.org/version/1",
    "title": "旺笔迹",
    "subtitle": "傀儡师の后院",
    "icon": "https://kls.red/images/favicon.ico",
    "description": "日常学习，点滴记录，软硬件食用攻略",
    "home_page_url": "https://kls.red",
    "items": [
        {
            "id": "https://kls.red/posts/ec9c91ab.html",
            "url": "https://kls.red/posts/ec9c91ab.html",
            "title": "防失联飞机场整理",
            "date_published": "2023-07-05T17:53:52.000Z",
            "content_html": "<h3 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h3>\n<p>为防止失联，应急限免科学机场，免费机场公益机场免费 vpn 免费代理 SSR-V2ray-trojan</p>\n<div class=\"note info\">\n<p>掌握最新机场优惠折扣通知，最新机场推荐评测图，最新科学上网相关新闻与消息，欢迎关注 ：<span class=\"exturl\" data-url=\"aHR0cHM6Ly90Lm1lL2ppY2hhbmd0ag==\">telegram 科学上网与机场观察频道</span><br />\n便宜机场推荐，对自己好一点～：<strong><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2h3YW56L1NTLVNTUi1WMnJheS9ibG9iL21hc3Rlci9SRUFETUUubWQ=\">便宜付费机场推荐</span></strong></p>\n<p>[原项目地址: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2h3YW56L1NTUi1WMnJheS1Ucm9qYW4tdnBuL3RyZWUvbWFpbg==\">hwanz/SSR-V2ray-Trojan-vpn: 免费机场公益机场收集 / 免费 vpn - 定时更新 (github.com)</span>](<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2h3YW56L1NTUi1WMnJheS1Ucm9qYW4tdnBuL3RyZWUvbWFpbg==\">https://github.com/hwanz/SSR-V2ray-Trojan-vpn/tree/main</span>)</p>\n</div>\n<h3 id=\"免费软件\"><a class=\"anchor\" href=\"#免费软件\">#</a> 免费软件</h3>\n<p>1）迷雾通：</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93YWEuYWkveGlhemFpbWl3dXRvbmc=\">迷雾通免翻墙链接</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9nZXBoLmlvL3pocy8=\">官网，需要代理才能打开</span></p>\n<p>2）landeng：</p>\n<p>很多人听过用过</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2dldGxhbnRlcm4v\">官网</span></p>\n<p>免费限制 500M，下面有些链接被墙了，可以先用蓝灯打开</p>\n<p>3）赛风： <span class=\"exturl\" data-url=\"aHR0cHM6Ly9wc2lwaG9uMy5jb20vemgvaW5kZXguaHRtbA==\">官网</span></p>\n<p>4）Warp ：<br />\ncloudflare 旗下 vpn<br />\n 全平台下载:<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jbG91ZGZsYXJld2FycC5jb20v\">https://cloudflarewarp.com/</span><br />\n 到 TG 机器人 bot：<br />\n@generatewarpplusbot  到按提示申请流量的 key，然后添加到下载的软件账户上，大概有 23pb，1pb 等于 100 万 G。不同运营商使用体验不一样。具体自测。</p>\n<h3 id=\"免费机场白嫖机场\"><a class=\"anchor\" href=\"#免费机场白嫖机场\">#</a> 免费机场 / 白嫖机场 ：</h3>\n<p>有些免费是暂时的，当前可能没有免费活动了。试用的好用可以付费。也可以购买我推荐的长期观察的付费机场。也别用 QQ 邮箱注册！下面的机场是我长久观察的，可放心付费，付费机场体验好很多。下面是免费机场，不一定还有免费试用活动，可以一个个试试看：</p>\n<p>2023.07 更新<br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly95b3V0dS5zaG9wLyMvcmVnaXN0ZXI/Y29kZT0zQ3hpcXlPYw==\">悠兔官网</span> : 3 小时 1G，某大佬机场，BGP 隧道中转 SS 机场，适合不想人太多的。近期我的主用机场，稳定性和速度都不错。有免费试用，其实好不好用得你试了才知道。适合不追求节点多的用户。老板人不错。也有按量付费。需要专属线路、大流量套餐可以开工单找机场主定制。八折优惠码：666。<span class=\"exturl\" data-url=\"aHR0cHM6Ly9qaWNoYW5ndHVpamlhbi5jb20v5L6/5a6cU1PmnLrlnLrmjqjojZDkuYvmgqDlhZQuaHRtbA==\">悠兔具体介绍</span> 试用觉得不错可以续费</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9iaXQubHkvM1NmcmtkNw==\">云翼网络</span> IEPl 专线与公网中转 ss 机场。1 块 1 天 5G 试用。可付费。<span class=\"exturl\" data-url=\"aHR0cHM6Ly9qaWNoYW5ndHVpamlhbi5jb20v5LiT57q/c3PmnLrlnLrmjqjojZDkuYvkupHnv7znvZHnu5zljoblj7LmtYvpgJ/nu5PmnpwuaHRtbA==\">云翼网络拓扑结构检测和流媒体、历史测速结果</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sYW9tYW95dW4ubWUvIy9yZWdpc3Rlcj9jb2RlPWkwVnY5TjVS\">老猫云</span>： 一小时 10G ，饿饭云分站，入口：深圳移动，落地：Nerocloud、FDCSERVERS、Hinet、DEDIPATH。可续费<span class=\"exturl\" data-url=\"aHR0cHM6Ly9qaWNoYW5ndHVpamlhbi5jb20v6ICB54yr5LqR5Y6G5Y+y5rWL6YCf57uT5p6c5pW05ZCILmh0bWw=\">老猫云拓扑结构检测和流媒体、历史测速结果合集</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9hYjEyeS5jb20vIy9yZWdpc3Rlcj9jb2RlPVlvSVZkUUpq\">大哥云</span> : 1 天 10G，3 年老机场了。广州移动和湖南联通 G 口独享。可以付费。<span class=\"exturl\" data-url=\"aHR0cHM6Ly9qaWNoYW5ndHVpamlhbi5jb20v5aSn5ZOl5LqR5Y6G5Y+y5rWL6YCf57uT5p6c5pW05ZCILmh0bWw=\">大哥云拓扑结构检测和流媒体、历史测速结果合集</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly95dXlhbi5vbmxpbmUvIy9yZWdpc3Rlcj9jb2RlPVBESDZESk8w\">雨燕云</span> : 4 天 1G。隧道中转机场。全中转机场，入口：佛山移动，江苏宿迁移动。过境：广港隧道、苏日隧道。</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ib2FyZC5qaWtlOTkueHl6LyMlMjUyRnJlZ2lzdGVyJTI1M0Zjb2RlJTI1M0RERVdKcHE3NA==\">极客加速器</span> :3 天 5G</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kYXNoLmZzY2xvdWQuY2MvIy9yZWdpc3Rlcj9jb2RlPTNNbDZwZzJZ\">FSCloud</span> : 3 天 10G,Azure 拉全球</p>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL2JpdC5seS80MG93eGxZ\">可莉</span>：全 Trojan 的线路机场。新注册用户可使用免费的 2GB 流量。运营 5 年有余，节点采用 BGP 入口 / IEPL 专线热备。有少量小众地区节点（阿根廷、卢森堡、巴西。土耳其），香港线路速度佳，流媒体解锁效果好<br />\n入门套餐:￥16.88/60GB/30 天，￥168.88/720GB/360 天</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly95b29vLmxpdmUvYXV0aC9yZWdpc3Rlcj9jb2RlPUFDeWY=\">速云</span> ： 3 天 10G,Trojan 协议</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9nbGFkb3Muc3BhY2UvbGFuZGluZy9KOUMxOS1NUTRZVy1QRTBHOS02MkZQMw==\">GLaDOS</span> :  免费 4 天，10G, 签到一天续一天。</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sa3NpLnh5ei8jL3JlZ2lzdGVyP2NvZGU9WWk1TUg5R2w=\">狗头加速器</span> :5 天 5G</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudGFpc2hhbi5wcm8vIy9yZWdpc3Rlcj9jb2RlPWJjOTZlSFR0\">TaiShan Net</span> :7 天 10G</p>\n<p>非常便宜的机场：<br />\n<a href=\"%5BTitle%5D(https://xn--4gq62f52gdss.com/#%252Fregister%253Fcode%253Dpqv3XyvY)\">一元机场</a> :11 块 / 年，50g / 月。这个价格不能要求太多</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly90bHkuc2gvMjMxMzk3Mg==\">tly</span> ： 3 天 2G,3 天签到一次可以继续使用，一直签一直能用。</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubW9qaWUubWUvIy9yZWdpc3Rlcj9jb2RlPVdSdnZEM3p1\">魔戒</span> :1 块 2G 试用套餐</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb3VjYXQudG9wL2luZGV4LnBocCMvcmVnaXN0ZXI/Y29kZT1EU1JtOURhTw==\">逗猫</span>：一天 3G 试用</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbi5tZXNsLmNsb3VkLyMvcmVnaXN0ZXI/Y29kZT1Jc0w3a3VnYQ==\">mesl</span> : 免费试用一天 1G。入口：上海电信、深圳阿里云、深圳移动、上海阿里云、东莞唯云、北京电信、佛山电信、嘉兴电信。落地：Misaka、Dmit、HKT、Akari、Kirino、Nearoute、Eons、MIKU、Amazon、Softbank 等。流媒体解锁挺好、线路类型很丰富的一个机场。月付 14 块 100G 起。试用后感觉不错可以付费使用。</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zb2NrYm9vbS5iYXIvYXV0aC9yZWdpc3Rlcj9hZmZpZD01MTM4NzU=\">sockboom</span> : 1 天 1G</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9mMDIxNjQyMGIuaW5maW5pc3BlZWQtMTgzYTAzYjAubmV0LyMvcmVnaXN0ZXI/Y29kZT1XTWFPc0FjNg==\">InfiniPort</span> : 1 天 16G</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wYW5lbC5rZWxlb2ZmaWNpYWwuY29tLyMvcmVnaXN0ZXI/Y29kZT1Xcm13VFVRUg==\">KELECLOUD</span> : 1 天 1G</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kYW5pdS5lMzAwZGFuaXUudG9wLyMvcmVnaXN0ZXI/Y29kZT1PSWROeEtRdg==\">大牛机场</span> ：1h1G</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaGFyZS5lbGV2ZW4ub2JzZXJ2ZXIvYXV0aC9yZWdpc3Rlci5odG1sP2NvZGU9SVlSSg==\">奶瓶</span> 2 小时试用</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kYXNoLmJpdHpuZXR1ay5jb20vIy9yZWdpc3Rlcj9jb2RlPU5tUTFPd09h\">bitznet</span> : IEPL 专线中转。1 天 5G</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kYXNoc3JjLmR1YWxuZXQuaW8vIy9yZWdpc3Rlcj9jb2RlPUt1bWwxTU5h\">dualnet</span>: IEPL 专线中转。1 天 5G</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jb25zb2xlLmx5NTIwLm1lLyMvcmVnaXN0ZXI/Y29kZT1ab3o3OHYzTw==\">凌云网络</span> 一天 1G 试用</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9weC5idDMub25lLyMvcmVnaXN0ZXI/Y29kZT1oWEd5VGJ3Uw==\">BT3rd-Speed</span> 6 天 10G</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly90bHkuc2gvMjMxMzk3Mg==\">tly</span> ： 3 天 2G,3 天签到一次可以继续使用，一直签一直能用。</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jaHkuZml0LyMvcmVnaXN0ZXI/Y29kZT10T0VIUWFyeg==\">彩虹云</span> : 2G 流量体验 - 一天有效期</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly92M3NzeS54eXovIy9yZWdpc3Rlcj9jb2RlPUlJTDc5d1U5\">宝贝云</span> : 1 天 2G</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly95eXN3LmFjeXVuLnRrLyMvcmVnaXN0ZXI/Y29kZT1GVTk5aUZpeA==\">ac 云</span>： 一个月 100G, 需要自己去商店购买</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucHJveHl2aXAueHl6LyMvcmVnaXN0ZXI/Y29kZT1Pd29aSThzQw==\">proxyvip</span> 一天 60G</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kaXdvbGVpLmNvbS8jL3JlZ2lzdGVyP2NvZGU9SXh1eVR3T2g=\">帝瓦雷</span> 半年 5G</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kYXh1bi5jbHViLw==\">大迅云</span> : 5G 5 天</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9pa3V1dS5ldS9hdXRoL3JlZ2lzdGVyP2NvZGU9M1dZZA==\">IKUUU VPN</span> : 永久 50G 。小黑子露出鸡脚了。</p>\n<h3 id=\"节点池\"><a class=\"anchor\" href=\"#节点池\">#</a> 节点池</h3>\n<p>通用订阅的转换为对应的客户端订阅就好。<a href=\"/%E6%9C%BA%E5%9C%BA%E8%AE%A2%E9%98%85%E9%93%BE%E6%8E%A5%E8%BD%AC%E6%8D%A2%E6%95%99%E7%A8%8B.html\">机场订阅链接转换收集与教程，支持机场 ss/ssr/v2ray 订阅转 clash\\quantumultX 订阅</a></p>\n<p>通用订阅：<br />\n1）<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zdWIucG1zdWIubWUvYmFzZTY0\">https://sub.pmsub.me/base64</span>   100 多条线路，ss+trojan+vmess 等</p>\n<p>clash 订阅地址 (直接复制粘贴到 clash 订阅下载里面)：</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zdWIucG1zdWIubWUvY2xhc2gueWFtbA==\">https://sub.pmsub.me/clash.yaml</span></p>\n<ol start=\"2\">\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly90ei5mb3ZpLnRrLw==\">https://tz.fovi.tk/</span></li>\n</ol>\n<p>3）<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zdWIuc2hhcmVjZW50cmUub25saW5lL3N1Yg==\">https://sub.sharecentre.online/sub</span> 12 条，vmess</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXQuaW8vZW16Y2xhc2g=\">https://git.io/emzclash</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2NoZmNoZjAzMDYvamVpZGlhbjQuMTgvbWFpbi80LjE4\">https://raw.githubusercontent.com/chfchf0306/jeidian4.18/main/4.18</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3NoYXJtYWp2L3Zwbg==\">小三 VPN</span>: 安卓 APP ，“不收费，不注册，不限速，不限流，不看广告不流氓，只想安静做个 VPN”。安卓软件采用 Clash 套壳，启动后抓包免费节点池</p>\n<p>需要先翻墙才打得开或者看得到：</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9mcmVlLXNzLnNpdGU=\">free-ss</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sbmNuLm9yZy8=\">免费节点 lncn</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL3NzLnB5dGhvbmljLmxpZmUvZnVsbA==\">全部 SS 账号信息</span></p>\n<p>可以直接打开：</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0FsdmluOTk5OS9uZXctcGFjL3dpa2kvc3MlRTUlODUlOEQlRTglQjQlQjklRTglQjQlQTYlRTUlOEYlQjc=\">ss 免费账号</span></p>\n<h3 id=\"推荐几个便宜的机场\"><a class=\"anchor\" href=\"#推荐几个便宜的机场\">#</a> 推荐几个便宜的机场</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zdW8ueXQvMEthZlRBbg==\">WgetCloud 官网链接</span>：华为云入口 IEPl 专线机场，香港老板，速度和稳定性不错。有按量付费和自定义套餐选项。按量付费：1.2 元 / G</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zdW8ueXQvS0l2OVpKcQ==\">TAG 官网链接</span> ：华为云入口 IEPl 专线机，特选套餐，200G / 年，140 块 / 年，200 + 节点。</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zdW8ueXQvdEM2OW5LdQ==\">云翼网络</span> IEPl 专线与公网中转 ss 机场。1 块 1 天 5G 试用。</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zdW8ueXQvam80TkZ0Zg==\">翼游官网</span>   ：ssr+trojan，全 IEPl 专线机场。有各个平台小白一键使用客户端。 每月 10 块 50G 流量 2 个客户端，随便用用没问题。</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zdW8ueXQvTlZyTjhWag==\">kycloud 官网</span> IEPL 专线 SS+Vmess 机场，老机场，CDN 优选入口，智能接入。也有海外用户节点（就是给在国外的人用的）。套餐不限同时在线客户端数。注册需要先购买。年付 150 每月 10G 流量起。</p>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL2JpdC5seS8zekZxOUxa\">泡泡狗</span>: IEPL 专线 Shadowsocks 协议机场。前置佛山珠海走深圳的 iepl 到香港。过境口子大，解锁不错。月付与不限时共存。7.5 / 月 63G 流起.</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9iaXQubHkvM0RjVEsw\">edCloud 网链接 1</span> ：vmess，深港专线机场。高性价比冷门节点机场。最便宜 10 块 / 50G 流量起。有两个特色：1. 主要是有 3 个回国节点：北京、上海和一个随机城市。白名单，常用国内流媒体使用。5、10 倍率。有回国线路的机场比较少。需要购买英文名称套餐 才有：“This 200G Monthly Plan is for Foreign Customers Outside China”，放这家主要是因为有回国的机场很少。2. 落地国家和节点多，130 + 国家，200 + 节点。且很多是低倍率。“权宜” 套餐以上才有。  <a href=\"./回国机场EDCloud历史测速结果整合.html\" target=\"_blank\">回国机场 EDCloud 历史测速结果整合</a></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9iaXQubHkvM0c5SzREeQ==\">Hutao 官网，需要代理打开</span>：全 IEPL 专线传输，支持 SS+SSR++V2ray+Trojan 协议机场。推荐给需要按量付费或者是轻量用户。Trojan 节点数目比 SSR 少。新用户专属 95 折优惠码：hutao。9 块 / 月 50G 起。</p>\n<p>具体介绍如下，需要更多稳定高速机场参考，建议收藏，避免急需：</p>\n<p><strong><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2h3YW56L1NTLVNTUi1WMnJheS9ibG9iL21hc3Rlci9SRUFETUUubWQ=\">稳定快速专线付费 ssr/v2ray 订阅机场推荐</span></strong></p>\n<h3 id=\"改hosts\"><a class=\"anchor\" href=\"#改hosts\">#</a> 改 hosts</h3>\n<p>可以使用工具一键更改，也可以手动改，主要是很容易失效，需要经常改，比较麻烦<br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2dvb2dsZWhvc3RzL2hvc3Rz\">googlehosts 改 hosts 教程</span></p>\n<h3 id=\"google镜像\"><a class=\"anchor\" href=\"#google镜像\">#</a> Google 镜像</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly94Z29vZ2xlLnh5ei8=\">https://xgoogle.xyz/</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9nb28ueGJ6eHMub3JnLw==\">https://goo.xbzxs.org/</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9nb29nbGUucG93ZXIzNjUubWwv\">https://google.power365.ml/</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9qc2FwaS51c3Roay5jbi8=\">https://jsapi.usthk.cn/</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cub29vcG4uY29tL3Rvb2wvZ2dzY2hvbGFyLw==\">https://www.ooopn.com/tool/ggscholar/</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9mc291ZnNvdS5jb20=\">https://fsoufsou.com</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9nb2dvLndlYmJpbGxpb24uY24=\">https://gogo.webbillion.cn</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9nb2dvZ2xlLmNmLw==\">https://gogogle.cf/</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zdGFydGdvb2dsZS5zdGFydHBhZ2luYS5ubC8=\">https://startgoogle.startpagina.nl/</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9nb29nbGUud2lubWluaS5ldS5vcmcv\">https://google.winmini.eu.org/</span></p>\n<h3 id=\"其它博客\"><a class=\"anchor\" href=\"#其它博客\">#</a> 其它博客</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9qaWNoYW5ndHVpamlhbi5jb20vc3NyLXYycmF55LiT57q/5py65Zy65o6o6I2QLmh0bWw=\">自用付费稳定高速国外 ssr-v2ray-trojan 机场推荐</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9qaWNoYW5ndHVpamlhbi5jb20v5Zu95aSWVlBT5Li75py65o6o6I2QLmh0bWw=\">适合翻墙建站国外 VPS 服务器主机推荐</span> ：适合自己梯子，或者建站 VPS</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9qaWNoYW5ndHVpamlhbi5jb20vdGVsZWdyYW0lRTclOTQlQjUlRTYlOEElQTUlRTklQTIlOTElRTklODElOTMlRTclQkUlQTQlRTclQkIlODQlRTYlOEUlQTglRTglOEQlOTAuaHRtbA==\">Telegram 频道推荐，新闻，NSFW 开车等</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9qaWNoYW5ndHVpamlhbi5jb20vY2hhdGdwdOWll+Wjs+mVnOWDjy5odG1s\">ChatGPT 套壳镜像，免代理使用 ChatGPT</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9qaWNoYW5ndHVpamlhbi5jb20vUXVhbnR1bXVsdFglRTUlQjAlOEYlRTclOTklQkQlRTclQUUlODAlRTUlOEQlOTUlRTQlQkQlQkYlRTclOTQlQTglRTYlOTUlOTklRTclQTglOEIuaHRtbA==\">QuantumultX 教程，机场订阅和去广告、会员破解、解锁 tiktok</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9qaWNoYW5ndHVpamlhbi5jb20vSU9TLVNoYWRvd3JvY2tldOWwj+eBq+eureS9v+eUqOaVmeeoiy5odG1s\">Shadowrocket (小火箭) 使用教程软件共享账号免费破解下载、去广告规则、解锁 tiktok 等</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9qaWNoYW5ndHVpamlhbi5jb20v5b2x6KeG56uZ5pS26ZuGLmh0bWw=\">影视站收集，视频会员破解</span>  : 看盗版影视</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9qaWNoYW5ndHVpamlhbi5jb20v5Y+R5Y2h572R5pS26ZuGLmh0bWw=\">发卡网收集</span>  : 购买 apple id，google voice ，quantumultX/Shadowrocket/loon 等代理软件，迅雷视频外卖音乐 QQ 共享单车百度等会员，netflix、spotify 等</p>\n<p><a href=\"/%E6%9C%BA%E5%9C%BA%E8%AE%A2%E9%98%85%E9%93%BE%E6%8E%A5%E8%BD%AC%E6%8D%A2%E6%95%99%E7%A8%8B.html\" target=\"_blank\">机场订阅链接转换收集与教程，支持机场 ss/ssr/v2ray 订阅转 clash\\quantumultX 订阅</a>  ：把多个机场的节点放在一起。</p>\n<p>windows 客户端：</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9qaWNoYW5ndHVpamlhbi5jb20vY2xhc2glRTYlOTUlOTklRTclQTglOEIuaHRtbA==\">clash for windows 使用教程、各个平台 Clash 客户端、各种 Clash 客户端</span></p>\n<p>游戏客户端推荐：<br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9qaWNoYW5ndHVpamlhbi5jb20vbmV0Y2jkvb/nlKjmlZnnqIvvvIzlrp7njrDnnJ/Ct+WFqOWxgOeahOS7o+eQhi5odG1s\">netch 使用教程，实现真・全局的代理</span></p>\n<p>安卓客户端推荐：</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9qaWNoYW5ndHVpamlhbi5jb20vQW5kcm9pZCVFMiU4MCU5NENsYXNoJTIwZm9yJTIwQW5kcm9pZCUyMCVFNCVCRCVCRiVFNyU5NCVBOCVFNiU5NSU5OSVFNyVBOCU4Qi5odG1s\">Clash for Android/CFA 使用教程</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9qaWNoYW5ndHVpamlhbi5jb20vc3VyZmJvYXJk5L2/55So5pWZ56iLLmh0bWw=\">安卓 ssr-v2ray 代理客户 surfboard 使用教程</span><br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9qaWNoYW5ndHVpamlhbi5jb20vJUU1JUFFJTg5JUU1JThEJTkzc3NyLXYycmF5LXRyb2phbiVFNCVCQiVBMyVFNyU5MCU4NiVFNSVBRSVBMiVFNiU4OCVCNyVFNyVBQiVBRnYycmF5TiVFNCVCRCVCRiVFNyU5NCVBOCVFNiU5NSU5OSVFNyVBOCU4Qi5odG1s\">安卓 ssr-v2ray-trojan 代理客户端 v2rayN 使用教程</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9qaWNoYW5ndHVpamlhbi5jb20vdjJyYXl0cm9qYW5zc3J4cmF55aSa5Y2P6K6u5a6J5Y2T5a6i5oi356uvLmh0bWw=\">v2ray trojan ssr xray 多协议安卓客户端收集</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9qaWNoYW5ndHVpamlhbi5jb20vJUU4JTgwJTgxJUU2JUFGJTlCJUU1JUFEJTkwUGFkYXZhbiVFNSU5QiVCQSVFNCVCQiVCNnNzdjJyYXklRTYlOUMlQkElRTUlOUMlQkElRTYlOUMlOEQlRTUlOEElQTElRTUlOTklQTglRTglQUUlQTIlRTklOTglODUlRTQlQjglOEVjbGFzaCVFOSU4NSU4RCVFNyVCRCVBRS5odG1s\">路由器老毛子 Padavan 固件 ss/v2ray 机场服务器订阅设置和 clash 配置</span></p>\n<p>机场测速工具：<br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9qaWNoYW5ndHVpamlhbi5jb20v5py65Zy65rWL6YCf5LmLc3RhaXJzcGVlZHRlc3Tkvb/nlKjmlZnnqIsuaHRtbA==\">机场测速之 stairspeedtest 使用教程</span></p>\n",
            "tags": [
                "记录生活",
                "飞机场推荐",
                "科学机场",
                "防失联",
                "公益机场",
                "免费代理"
            ]
        },
        {
            "id": "https://kls.red/posts/46acedc6.html",
            "url": "https://kls.red/posts/46acedc6.html",
            "title": "Hexo 静态博客设置文章加密访问",
            "date_published": "2023-07-05T13:22:14.000Z",
            "content_html": "<h3 id=\"引言\"><a class=\"anchor\" href=\"#引言\">#</a> 引言</h3>\n<p>今天给大家推荐一款适用于 Hexo 的静态博客加密插件：hexo-blog-encrypt，搭配此插件你可以写一些私密博客，通过密码验证的方式让人不能随意浏览。</p>\n<h3 id=\"安装\"><a class=\"anchor\" href=\"#安装\">#</a> 安装</h3>\n<p>npm</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> hexo-blog-encrypt</pre></td></tr></table></figure><p>或</p>\n<p>yarn</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">yarn</span> <span class=\"token function\">add</span> hexo-blog-encrypt</pre></td></tr></table></figure><h3 id=\"用法\"><a class=\"anchor\" href=\"#用法\">#</a> 用法</h3>\n<p>快速使用</p>\n<p>添加 password 字段到文章信息头 Front-matter，该字段用于设置文章访问密码：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>---</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>title: Hello World</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>date: <span class=\"token number\">2016</span>-03-30 <span class=\"token number\">21</span>:18:02</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>password: hello</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>---</pre></td></tr></table></figure><p>（密码就是 password 字段对应的值 hello）</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>---</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>title: Hello World</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>date: <span class=\"token number\">2016</span>-03-30 <span class=\"token number\">21</span>:12:21</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>password: hello</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>abstract:  <span class=\"token comment\"># 用于设置加密文章显示的摘要。</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>message: <span class=\"token comment\"># 输入密码提示。</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>wrong_pass_message: <span class=\"token comment\"># 输入错误提示。</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>---</pre></td></tr></table></figure>",
            "tags": [
                "网站搭建",
                "Hexo部署教程",
                "网站搭建",
                "Hexo",
                "文章加密插件"
            ]
        },
        {
            "id": "https://kls.red/posts/cbd7e20a.html",
            "url": "https://kls.red/posts/cbd7e20a.html",
            "title": "Centos7 更换国内源",
            "date_published": "2023-07-04T09:49:28.000Z",
            "content_html": "<h3 id=\"准备工作\"><a class=\"anchor\" href=\"#准备工作\">#</a> 准备工作</h3>\n<p>检查 wget 是否安装</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">wget</span> <span class=\"token parameter variable\">-V</span></pre></td></tr></table></figure><p>安装</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>yum <span class=\"token function\">install</span> <span class=\"token function\">wget</span> <span class=\"token parameter variable\">-y</span></pre></td></tr></table></figure><h3 id=\"备份原有yum源\"><a class=\"anchor\" href=\"#备份原有yum源\">#</a> 备份原有 yum 源</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">mv</span> /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup</pre></td></tr></table></figure><h3 id=\"选择可用的yum源\"><a class=\"anchor\" href=\"#选择可用的yum源\">#</a> 选择可用的 yum 源</h3>\n<p><strong>阿里云</strong></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">wget</span> <span class=\"token parameter variable\">-O</span> /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-7.repo</pre></td></tr></table></figure><p><strong>163</strong></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">wget</span> <span class=\"token parameter variable\">-O</span> /etc/yum.repos.d/CentOS-Base.repo http://mirrors.163.com/.help/CentOS7-Base-163.repo</pre></td></tr></table></figure><h3 id=\"生成缓存\"><a class=\"anchor\" href=\"#生成缓存\">#</a> 生成缓存</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>yum clean all  <span class=\"token comment\"># 清除 yum 缓存</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>yum makecache  <span class=\"token comment\"># 重建缓存</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>yum <span class=\"token parameter variable\">-y</span> update  <span class=\"token comment\"># 升级所有包</span></pre></td></tr></table></figure>",
            "tags": [
                "系统配置",
                "Linux",
                "Linux",
                "Centos7更换国内源"
            ]
        },
        {
            "id": "https://kls.red/posts/c0671422.html",
            "url": "https://kls.red/posts/c0671422.html",
            "title": "docker安装 MySQL8.0.23",
            "date_published": "2023-07-04T09:37:55.000Z",
            "content_html": "<h3 id=\"下载安装\"><a class=\"anchor\" href=\"#下载安装\">#</a> 下载安装</h3>\n<h4 id=\"第一步在hubdockercom上搜索mysql镜像\"><a class=\"anchor\" href=\"#第一步在hubdockercom上搜索mysql镜像\">#</a> 第一步：在<span class=\"exturl\" data-url=\"aHR0cHM6Ly9odWIuZG9ja2VyLmNvbS8=\"> hub.docker.com</span> 上搜索 mysql 镜像</h4>\n<h4 id=\"第二步拉取指定版本的mysql\"><a class=\"anchor\" href=\"#第二步拉取指定版本的mysql\">#</a> 第二步：拉取指定版本的 mysql</h4>\n<p>也可以指定拉取版本，例如：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">docker</span> pull mysql:8.0.23</pre></td></tr></table></figure><h4 id=\"第三步检查mysql镜像\"><a class=\"anchor\" href=\"#第三步检查mysql镜像\">#</a> 第三步：检查 mysql 镜像</h4>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">docker</span> images</pre></td></tr></table></figure><h4 id=\"第四步启动运行mysql镜像-docker-run-用于启动一个容器\"><a class=\"anchor\" href=\"#第四步启动运行mysql镜像-docker-run-用于启动一个容器\">#</a> 第四步：启动运行 mysql 镜像 (docker run 用于启动一个容器)</h4>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">docker</span> run <span class=\"token parameter variable\">-p</span> <span class=\"token number\">3306</span>:3306 <span class=\"token parameter variable\">--name</span> mysql <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token parameter variable\">-v</span> /usr/local/docker/mysql/mysql-files:/var/lib/mysql-files <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token parameter variable\">-v</span> /usr/local/docker/mysql/conf:/etc/mysql <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token parameter variable\">-v</span> /usr/local/docker/mysql/logs:/var/log/mysql <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token parameter variable\">-v</span> /usr/local/docker/mysql/data:/var/lib/mysql <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">MYSQL_ROOT_PASSWORD</span><span class=\"token operator\">=</span>root <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token parameter variable\">-d</span> mysql:8.0.23</pre></td></tr></table></figure><p>假如安装过程中失败了，则可通过 docker ps -a 查看以前的容器，假如已存在，则通过 docker rm 镜像 id 删除再重新安装即可。</p>\n<h4 id=\"第五步停止mysql服务可选\"><a class=\"anchor\" href=\"#第五步停止mysql服务可选\">#</a> 第五步：停止 mysql 服务（可选）</h4>\n<p>执行完第四个步骤（启动运行 mysql 镜像），mysql 就会自动启动了，假如需要停止这个</p>\n<p>服务可以执行：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> stop mysql</pre></td></tr></table></figure><h4 id=\"第六步启动mysql服务\"><a class=\"anchor\" href=\"#第六步启动mysql服务\">#</a> 第六步：启动 mysql 服务</h4>\n<p>假如 mysql 服务没有启动运行，但是 mysql 容器是存在的，可以通过如下方式启动 mysql。</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>docker <span class=\"token keyword\">start</span> mysql</pre></td></tr></table></figure><p>假如希望查看 mysql 启动时的日志，可以执行 docker container logs mysql 这个指令。</p>\n<h4 id=\"第七步查看docker启动的服务\"><a class=\"anchor\" href=\"#第七步查看docker启动的服务\">#</a> 第七步：查看 docker 启动的服务</h4>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> <span class=\"token function\">ps</span></pre></td></tr></table></figure><h4 id=\"第八步进入容器-退出容器用exit\"><a class=\"anchor\" href=\"#第八步进入容器-退出容器用exit\">#</a> 第八步：进入容器 (退出容器用 exit)</h4>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">docker</span> <span class=\"token builtin class-name\">exec</span> <span class=\"token parameter variable\">-it</span> mysql <span class=\"token function\">bash</span></pre></td></tr></table></figure><h4 id=\"第九步登陆默认密码root一定要先进入mysql容器\"><a class=\"anchor\" href=\"#第九步登陆默认密码root一定要先进入mysql容器\">#</a> 第九步：登陆 (默认密码 root)，一定要先进入 mysql 容器。</h4>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>mysql <span class=\"token parameter variable\">-uroot</span> <span class=\"token parameter variable\">-proot</span></pre></td></tr></table></figure><h4 id=\"第十步设置mysql开机自启动可选\"><a class=\"anchor\" href=\"#第十步设置mysql开机自启动可选\">#</a> 第十步：设置 mysql 开机自启动（可选）</h4>\n<figure class=\"highlight ini\"><figcaption data-lang=\"ini\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key attr-name\">docker update mysql --restart</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">always</span></pre></td></tr></table></figure><p>如何重启 mysql 服务？</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> restart mysql</pre></td></tr></table></figure><p>查看 MySQL 安装到哪了？</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">whereis</span> mysql</pre></td></tr></table></figure><p>连接 MySQL 时要注意</p>\n<p>第一步：关闭 linux 宿主机的防火墙 (假如直击连接), 命令忘了可以通过搜索引擎查。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> systemctl stop firewalld.service</pre></td></tr></table></figure><p>第二步：重启 docker</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> systemctl restart <span class=\"token function\">docker</span></pre></td></tr></table></figure><p>第三步：启动 mysql</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>docker <span class=\"token keyword\">start</span> mysql</pre></td></tr></table></figure><h3 id=\"navacat连接mysql\"><a class=\"anchor\" href=\"#navacat连接mysql\">#</a> Navacat 连接 MySQL</h3>\n<p>连接 mysql 如果遇到以下问题可以这样解决</p>\n<p>问题描述：</p>\n<figure class=\"highlight arduino\"><figcaption data-lang=\"arduino\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">1251</span><span class=\"token operator\">-</span>client does <span class=\"token operator\">not</span> support authentication protocol requesred by server<span class=\"token punctuation\">;</span>consider upgrading MySQL <span class=\"token builtin\">Client</span></pre></td></tr></table></figure><p>解决办法：</p>\n<h4 id=\"1mysql容器内部\"><a class=\"anchor\" href=\"#1mysql容器内部\">#</a> （1）mysql 容器内部</h4>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">docker</span> <span class=\"token builtin class-name\">exec</span> <span class=\"token parameter variable\">-it</span> mysql <span class=\"token function\">bash</span></pre></td></tr></table></figure><h4 id=\"2进入mysql\"><a class=\"anchor\" href=\"#2进入mysql\">#</a> （2）进入 mysql</h4>\n<figure class=\"highlight css\"><figcaption data-lang=\"CSS\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>mysql -u root -p root</pre></td></tr></table></figure><p>输入密码 root</p>\n<h4 id=\"3使用mysql数据库\"><a class=\"anchor\" href=\"#3使用mysql数据库\">#</a> （3）使用 mysql 数据库</h4>\n<figure class=\"highlight perl\"><figcaption data-lang=\"perl\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">use</span> user</pre></td></tr></table></figure><h4 id=\"4查看用户信息\"><a class=\"anchor\" href=\"#4查看用户信息\">#</a> （4）查看用户信息</h4>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> host<span class=\"token punctuation\">,</span><span class=\"token keyword\">user</span><span class=\"token punctuation\">,</span>plugin<span class=\"token punctuation\">,</span>authentication_string <span class=\"token keyword\">from</span> mysql<span class=\"token punctuation\">.</span><span class=\"token keyword\">user</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>备注：host 为 % 表示不限制 ip localhost 表示本机使用 plugin 非 mysql_native_password 则需要修改密码</p>\n<h4 id=\"5修改用户密码\"><a class=\"anchor\" href=\"#5修改用户密码\">#</a> （5）修改用户密码</h4>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">USER</span> <span class=\"token string\">'root'</span><span class=\"token variable\">@'%'</span> IDENTIFIED <span class=\"token keyword\">WITH</span> mysql_native_password <span class=\"token keyword\">BY</span> <span class=\"token string\">'123456'</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h4 id=\"6更新user为roothost为-的密码为123456\"><a class=\"anchor\" href=\"#6更新user为roothost为-的密码为123456\">#</a> （6）更新 user 为 root，host 为 % 的密码为 123456</h4>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">USER</span> <span class=\"token string\">'root'</span><span class=\"token variable\">@'localhost'</span> IDENTIFIED <span class=\"token keyword\">WITH</span> mysql_native_password <span class=\"token keyword\">BY</span> <span class=\"token string\">'123456'</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>更新 user 为 root，host 为 localhost 的密码为 123456</p>\n<h4 id=\"7再次连接即可成功\"><a class=\"anchor\" href=\"#7再次连接即可成功\">#</a> （7）再次连接即可成功！</h4>\n",
            "tags": [
                "系统配置",
                "Docker",
                "Docker",
                "MySQL安装"
            ]
        },
        {
            "id": "https://kls.red/posts/6a31c4a2.html",
            "url": "https://kls.red/posts/6a31c4a2.html",
            "title": "Debian 10/11更换国内源，解决系统无法更新问题",
            "date_published": "2023-07-04T00:17:06.000Z",
            "content_html": "<h5 id=\"1-备份现有源\"><a class=\"anchor\" href=\"#1-备份现有源\">#</a> 1、备份现有源</h5>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">cp</span> /etc/apt/sources.list /etc/apt/sources.list_bak</pre></td></tr></table></figure><h5 id=\"2-一般情况下将-etcaptsourceslist-文件中-debian-默认的源地址-httpdebdebianorg-替换为国内源即可\"><a class=\"anchor\" href=\"#2-一般情况下将-etcaptsourceslist-文件中-debian-默认的源地址-httpdebdebianorg-替换为国内源即可\">#</a> 2、一般情况下，将 /etc/apt/sources.list 文件中 Debian 默认的源地址 <span class=\"exturl\" data-url=\"aHR0cDovL2RlYi5kZWJpYW4ub3JnLw==\">http://deb.debian.org/</span> 替换为国内源即可。</h5>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#中国科技大学</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">sed</span> <span class=\"token parameter variable\">-i</span> <span class=\"token string\">'s/deb.debian.org/mirrors.ustc.edu.cn/g'</span>/etc/apt/sources.list</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">#网易云 163</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">sed</span> <span class=\"token parameter variable\">-i</span> <span class=\"token string\">'s/deb.debian.org/mirrors.163.com/g'</span>/etc/apt/sources.list</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">#阿里云</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">sed</span> <span class=\"token parameter variable\">-i</span> <span class=\"token string\">'s/deb.debian.org/mirrors.aliyun.com/g'</span>/etc/apt/sources.list</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">#清华同方</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">sed</span> <span class=\"token parameter variable\">-i</span> <span class=\"token string\">'s/deb.debian.org/mirrors.tuna.tsinghua.edu.cn/g'</span>/etc/apt/sources.list</pre></td></tr></table></figure><h5 id=\"3-sudo-apt-get-update-更新索引以生效\"><a class=\"anchor\" href=\"#3-sudo-apt-get-update-更新索引以生效\">#</a> 3、 <code>sudo apt-get update </code> 更新索引以生效。</h5>\n",
            "tags": [
                "系统配置",
                "Linux",
                "Linux",
                "Debian更换国内源"
            ]
        },
        {
            "id": "https://kls.red/posts/a42a1d2d.html",
            "url": "https://kls.red/posts/a42a1d2d.html",
            "title": "Screen 安装与实际使用命令",
            "date_published": "2023-07-04T00:10:46.000Z",
            "content_html": "<p>Screen 是一个在 Linux 系统下非常有用的终端工具，它可以在单个终端会话中创建多个虚拟终端，并且可以在后台运行终端会话。这篇文章将向您介绍如何在 Linux 系统中使用 Screen 工具，并提供一些实用的示例。</p>\n<h2 id=\"安装-screen\"><a class=\"anchor\" href=\"#安装-screen\">#</a> <strong>安装 Screen</strong></h2>\n<p>在大多数 Linux 发行版中，您可以使用系统自带的包管理器来安装 Screen。例如，在 Ubuntu 中，可以使用以下命令来安装 Screen：</p>\n<ul>\n<li>centos</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>yun <span class=\"token function\">install</span> <span class=\"token function\">screen</span></pre></td></tr></table></figure><ul>\n<li>ubuntu/debian</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> <span class=\"token function\">screen</span></pre></td></tr></table></figure><h2 id=\"基本使用\"><a class=\"anchor\" href=\"#基本使用\">#</a> <strong>基本使用</strong></h2>\n<p>使用 Screen 最基本的命令是  <code>screen</code> ，它可以创建一个新的终端会话。当您运行这个命令时，Screen 会在当前终端中创建一个新的虚拟终端，并进入到这个终端中。您可以在这个终端中运行任何命令，就像在普通的终端中一样。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">screen</span></pre></td></tr></table></figure><p>要退出当前的 Screen 会话，可以使用  <code>exit</code>  命令或者按下  <code>Ctrl</code>  +  <code>a</code> ，然后再按下  <code>d</code>  键。这样会将当前的 Screen 会话移动到后台，并返回到原来的终端中。</p>\n<p>如果您想重新进入一个已经存在的 Screen 会话，可以使用  <code>screen -r</code>  命令，并指定会话的 ID 或名称。例如，要重新进入 ID 为 12345 的 Screen 会话，可以使用以下命令：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">screen</span> <span class=\"token parameter variable\">-r</span> <span class=\"token number\">12345</span></pre></td></tr></table></figure><h2 id=\"创建窗口和面板\"><a class=\"anchor\" href=\"#创建窗口和面板\">#</a> <strong>创建窗口和面板</strong></h2>\n<p>在 Screen 会话中，您可以创建多个窗口和面板，以便在同一个终端会话中同时运行多个程序。</p>\n<p>要创建一个新窗口，请使用  <code>Ctrl</code>  +  <code>a</code> ，然后再按下  <code>c</code>  键。这样会在当前的 Screen 会话中创建一个新窗口，并将光标移动到这个窗口中。您可以在这个窗口中运行任何命令，就像在一个新的终端中一样。</p>\n<p>要在当前的窗口中创建一个新的面板，请使用  <code>Ctrl</code>  +  <code>a</code> ，然后再按下  <code>|</code>  或  <code>%</code>  键。这样会将当前的窗口分成两个部分，并在其中一个部分中创建一个新面板。您可以在这个新面板中运行任何命令，就像在一个新的终端中一样。</p>\n<h2 id=\"列出会话\"><a class=\"anchor\" href=\"#列出会话\">#</a> <strong>列出会话</strong></h2>\n<p>要列出所有正在运行的 Screen 会话，可以使用  <code>screen -ls</code>  命令。这个命令会显示所有正在运行的 Screen 会话的 ID、名称和状态。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">screen</span> <span class=\"token parameter variable\">-ls</span></pre></td></tr></table></figure><h2 id=\"断开会话\"><a class=\"anchor\" href=\"#断开会话\">#</a> <strong>断开会话</strong></h2>\n<p>要完全断开一个 Screen 会话，可以使用  <code>screen -X -S session_id quit</code>  命令，其中  <code>session_id</code>  是会话的 ID 或名称。这个命令会强制关闭这个会话，并杀死会话中的所有进程。请注意，这个命令会立即关闭会话，而不会给进程任何时间来进行清理工作。因此，在使用这个命令之前，请确保您已经保存了所有的数据并且没有未完成的操作。</p>\n<h2 id=\"其他命令\"><a class=\"anchor\" href=\"#其他命令\">#</a> <strong>其他命令</strong></h2>\n<p>以下是一些其他常用的 Screen 命令：</p>\n<ul>\n<li><code>Ctrl</code>  +  <code>a</code> ，然后再按下  <code>n</code>  键：切换到下一个窗口。</li>\n<li><code>Ctrl</code>  +  <code>a</code> ，然后再按下  <code>p</code>  键：切换到上一个窗口。</li>\n<li><code>Ctrl</code>  +  <code>a</code> ，然后再按下  <code>d</code>  键：将当前的 Screen 会话移动到后台。</li>\n<li><code>Ctrl</code>  +  <code>a</code> ，然后再按下  <code>?</code>  键：显示所有可用的 Screen 命令。</li>\n</ul>\n<h2 id=\"示例\"><a class=\"anchor\" href=\"#示例\">#</a> <strong>示例</strong></h2>\n<p>以下是一个使用 Screen 的示例：</p>\n<ol>\n<li>在终端中运行  <code>screen</code>  命令，创建一个新的 Screen 会话。</li>\n<li>在新的 Screen 会话中运行  <code>top</code>  命令，查看系统资源使用情况。</li>\n<li>使用  <code>Ctrl</code>  +  <code>a</code> ，然后再按下  <code>c</code>  键，创建一个新窗口。</li>\n<li>在新的窗口中运行  <code>ping www.google.com</code>  命令，测试网络连接。</li>\n<li>使用  <code>Ctrl</code>  +  <code>a</code> ，然后再按下  <code>%</code>  键，将当前的窗口分成两个面板。</li>\n<li>在新的面板中运行  <code>htop</code>  命令，查看系统资源使用情况。</li>\n<li>使用  <code>Ctrl</code>  +  <code>a</code> ，然后再按下  <code>n</code>  键，切换到下一个窗口。</li>\n<li>使用  <code>Ctrl</code>  +  <code>a</code> ，然后再按下  <code>d</code>  键，将 Screen 会话移动到后台。</li>\n<li>使用  <code>screen -ls</code>  命令，查看所有正在运行的 Screen 会话。</li>\n<li>使用  <code>screen -r</code>  命令，重新进入之前创建的 Screen 会话。</li>\n</ol>\n<p>以上示例展示了如何在一个 Screen 会话中同时运行多个程序，并在不同的窗口和面板中查看它们的输出。您可以根据自己的需求，使用 Screen 来管理终端会话，提高工作效率。</p>\n",
            "tags": [
                "系统配置",
                "Linux",
                "Linux",
                "远程ssh",
                "后台运行"
            ]
        },
        {
            "id": "https://kls.red/posts/8976dd96.html",
            "url": "https://kls.red/posts/8976dd96.html",
            "title": "Openwrt挂载网盘到本地教程",
            "date_published": "2023-07-04T00:04:00.000Z",
            "content_html": "<h3 id=\"项目地址\"><a class=\"anchor\" href=\"#项目地址\">#</a> 项目地址</h3>\n<ul>\n<li><strong>docker 挂载云盘 [Clouddrive]</strong> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9odWIuZG9ja2VyLmNvbS9yL2Nsb3VkbmFzL2Nsb3VkZHJpdmU=\">https://hub.docker.com/r/cloudnas/clouddrive</span></li>\n<li><strong>Windows 版本</strong><br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubGFuem91Yi5jb20vYjA4eWt2ZDBoP3B3ZD1ocjR5\"> https://www.lanzoub.com/b08ykvd0h</span> 密码: hr4y</li>\n<li><strong>Clouddrive 2 版本</strong><br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubGFuem91Yi5jb20vYjA5MDE3ZW9iP3B3ZD0yaXUx\"> https://www.lanzoub.com/b09017eob</span> 密码：2iu1</li>\n</ul>\n<h4 id=\"演示过程视频\"><a class=\"anchor\" href=\"#演示过程视频\">#</a> 演示过程视频</h4>\n<iframe width=\"720\" height=\"405\" frameborder=\"0\" src=\"https://www.ixigua.com/iframe/7008135204053189157?autoplay=0\" referrerpolicy=\"unsafe-url\" allowfullscreen></iframe>\n<h4 id=\"cloud-drive-说明\"><a class=\"anchor\" href=\"#cloud-drive-说明\">#</a> Cloud Drive 说明：</h4>\n<ol>\n<li>\n<p>理解一：<br />\n通过 Clouddrive 把网盘映射成本地磁盘直接使用，同时也提供一个统一的网盘浏览管理 web 界面</p>\n</li>\n<li>\n<p>理解二：<br />\nClouddrive 将云存储服务挂载为本地文件系统。</p>\n</li>\n<li>\n<p>理解三：<br />\nlinux 下安装 cloudnas，相当于是挂了一块硬盘到 linux 下，硬盘内容是 115，再装 jellyfin 也好 emby 也好，都相当于访问本地硬盘进行整理</p>\n</li>\n</ol>\n<hr />\n<p><strong>Cloud Drive 功能：</strong></p>\n<ol>\n<li>可转存 (json，.txt，115://xxx) 类型的 sha1</li>\n<li>外网访问，分享功能，免登录</li>\n<li>支持对云盘文件夹重命名</li>\n<li>jellyfin 客户端，电脑、手机上的浏览器，或者 jellyfin app，或者 kodi 都行</li>\n</ol>\n<h4 id=\"配置过程\"><a class=\"anchor\" href=\"#配置过程\">#</a> 配置过程</h4>\n<div class=\"note info\">\n<p>避坑 docker 安装空间不足，openwrt 一般只要不是自己 DIY 编译的很少有把 docker 分区编译够用的，只能通过挂载分区的方式来实现扩容。</p>\n</div>\n<h4 id=\"安装空间不足解决方法\"><a class=\"anchor\" href=\"#安装空间不足解决方法\">#</a> 安装空间不足，解决方法</h4>\n<p><strong>1. 创建分区或者添加新分区</strong></p>\n<p><strong>一般添加的新的磁盘默认是看不到的，需要执行一下命令创建分区或者格式化成 ext4 才能在挂载点看到该分区。</strong></p>\n<p><strong>a. 查看当前系统所有硬盘及分区情况：fdisk -l</strong></p>\n<p><strong>b. 在指定的硬盘（例：/dev/sdb）上创建分区：fdisk /dev/sdb ， 根据提示进行下一步操作</strong></p>\n<p>如：查看帮助（h），新建分区（n），删除分区（d），查看分区情况（p）</p>\n<p><strong>c. 分区成功后，写分区表并退出（w）</strong></p>\n<p><strong>d. 对新建分区（例：/dev/sda1）进行格式化：mkfs.ext4 /dev/sdb1</strong><br />\n 由于我自己的是虚拟机的环境，就直接添加一个分区，格式化后直接挂载了，如果是单个物理盘，而且已经安装了 openwrt，请根据命令创建新分区，格式化 ext4 后挂载即可 &quot;</p>\n<p><img data-src=\"http://web1.kls.red/webpic/image-20230705165609124.png\" alt=\"image-20230705165609124\" /></p>\n<ul>\n<li><strong>点击添加</strong></li>\n</ul>\n<p><img data-src=\"http://web1.kls.red/webpic/image-20230705165552397.png\" alt=\"image-20230705165552397\" /></p>\n<ul>\n<li><strong>选择好分区和挂载目录，勾选上 启用此挂载点</strong></li>\n</ul>\n<p><img data-src=\"http://web1.kls.red/webpic/image-20230705165541439.png\" alt=\"image-20230705165541439\" /></p>\n<p><strong>在高级选项里选择 ext4，点击 保存 &amp; 应用</strong></p>\n<p><strong>然后重启 openwrt，一定要重启，不然不生效<br />\n生效后如下</strong></p>\n<p><img data-src=\"http://web1.kls.red/webpic/image-20230705165525408.png\" alt=\"image-20230705165525408\" /></p>\n<p>把分区挂载到 opt 目录后，也就是 docker 的目录达到了扩容的目的</p>\n<hr />\n<p><strong>处理完扩容问题后，接下来进入安装阶段</strong></p>\n<p>通过 ssh 连接 openwrt 后</p>\n<p>开启 MountFlags</p>\n<figure class=\"highlight abap\"><figcaption data-lang=\"ABAP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>mkdir -p /etc/systemd/system/docker<span class=\"token punctuation\">.</span>service<span class=\"token punctuation\">.</span>d/</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>cat &lt;&lt;EOF <span class=\"token operator\">></span> /etc/systemd/system/docker<span class=\"token punctuation\">.</span>service<span class=\"token punctuation\">.</span>d/clear_mount_propagation_flags<span class=\"token punctuation\">.</span>conf</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>[Service]</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>MountFlags=shared</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>EOF</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>mount --make<span class=\"token token-operator punctuation\">-</span>shared /opt</pre></td></tr></table></figure><p><strong>然后</strong></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#CD1:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">docker</span> run <span class=\"token parameter variable\">-d</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>      <span class=\"token parameter variable\">--name</span> clouddrive <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token parameter variable\">--restart</span> unless-stopped <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token parameter variable\">-v</span> /opt/CloudNAS:/CloudNAS:shared <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token parameter variable\">-v</span> /opt/Config:/Config <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token parameter variable\">--network</span> <span class=\"token function\">host</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token parameter variable\">--pid</span> <span class=\"token function\">host</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>     <span class=\"token parameter variable\">--privileged</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>     <span class=\"token parameter variable\">--device</span> /dev/fuse:/dev/fuse <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>     cloudnas/clouddrive</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>     </pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">#CD2     </span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token function\">docker</span> run <span class=\"token parameter variable\">-d</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>      <span class=\"token parameter variable\">--name</span> clouddrive <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>      <span class=\"token parameter variable\">--restart</span> unless-stopped <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      <span class=\"token parameter variable\">--env</span> <span class=\"token assign-left variable\">CLOUDDRIVE_HOME</span><span class=\"token operator\">=</span>/Config <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>      <span class=\"token parameter variable\">-v</span> /opt/CloudNAS:/CloudNAS:shared <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      <span class=\"token parameter variable\">-v</span> /opt/Config:/Config <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>      <span class=\"token parameter variable\">--network</span> <span class=\"token function\">host</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      <span class=\"token parameter variable\">--pid</span> <span class=\"token function\">host</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>     <span class=\"token parameter variable\">--privileged</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>     <span class=\"token parameter variable\">--device</span> /dev/fuse:/dev/fuse <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>     cloudnas/clouddrive2-unstable</pre></td></tr></table></figure><p>需要映射其他路径请参考官方 docker 说明</p>\n<hr />\n<p><strong>自此安装结束</strong><br />\n额，(⊙o⊙)… 这张图是挂载到局域网。。。。<br />\n<img data-src=\"http://web1.kls.red/webpic/image-20230705165509247.png\" alt=\"image-20230705165509247\" /></p>\n<p><strong>然后输入 openwrt 地址加端口号注册或者登录即可</strong></p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/msmkls/photo@main/2257722242.png\" alt=\"ksvzj7di.png\" /></p>\n<p><strong>阿里云和 115 网盘可通过扫码登录</strong></p>\n<p>登录好网盘账号以后，电脑可以通过网络共享访问，例如：\\192.168.1.1 把网盘映射到本地即可<br />\n<img data-src=\"http://web1.kls.red/webpic/image-20230705165440182.png\" alt=\"image-20230705165440182\" /></p>\n<p><strong>重启路由 docker 启动失败解决</strong><br />\n找到系统 --- 启动项 --- 本地启动脚本（拉到最底部）<br />\n<img data-src=\"http://web1.kls.red/webpic/image-20230705165414219.png\" alt=\"image-20230705165414219\" /></p>\n<p>按照上图，把下面参数填到指定位置，保存应用，重启即可！</p>\n<figure class=\"highlight abap\"><figcaption data-lang=\"ABAP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>mount --make<span class=\"token token-operator punctuation\">-</span>shared /opt</pre></td></tr></table></figure><h4 id=\"如果操作中命令错误或者需要删除可以用以下命令\"><a class=\"anchor\" href=\"#如果操作中命令错误或者需要删除可以用以下命令\">#</a> 如果操作中命令错误或者需要删除可以用以下命令。</h4>\n<p>ps：如果多容器请安需删除，删除其一，请注意不要使用全部删除</p>\n<p><strong>查看运行中的容器</strong></p>\n<figure class=\"highlight abap\"><figcaption data-lang=\"ABAP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>docker ps</pre></td></tr></table></figure><p><strong>进入容器</strong></p>\n<figure class=\"highlight abap\"><figcaption data-lang=\"ABAP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>docker <span class=\"token keyword\">exec</span> -i -t containerId /bin/bash</pre></td></tr></table></figure><p><strong>查看容器</strong></p>\n<figure class=\"highlight abap\"><figcaption data-lang=\"ABAP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>docker ps -a</pre></td></tr></table></figure><p><strong>启动指定容器 containerId 是容器的 ID</strong></p>\n<figure class=\"highlight abap\"><figcaption data-lang=\"ABAP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>docker start containerId</pre></td></tr></table></figure><p><strong>停止指定容器 containerId 是容器的 ID</strong></p>\n<figure class=\"highlight abap\"><figcaption data-lang=\"ABAP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>docker <span class=\"token keyword\">stop</span> containerId</pre></td></tr></table></figure><p><strong>删除指定容器 containerId 是容器的 ID</strong></p>\n<figure class=\"highlight abap\"><figcaption data-lang=\"ABAP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>docker rm containerId</pre></td></tr></table></figure><p><strong>查看镜像列表</strong></p>\n<figure class=\"highlight abap\"><figcaption data-lang=\"ABAP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>docker images</pre></td></tr></table></figure><p><strong>删除指定镜像 ImageId 是镜像的 Id</strong></p>\n<figure class=\"highlight abap\"><figcaption data-lang=\"ABAP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>docker rmi ImageId</pre></td></tr></table></figure><h4 id=\"慎用以下全部命令\"><a class=\"anchor\" href=\"#慎用以下全部命令\">#</a> 慎用以下全部命令</h4>\n<p>删除全部容器和镜像命令<br />\n列出所有的容器 ID</p>\n<figure class=\"highlight abap\"><figcaption data-lang=\"ABAP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>docker ps -aq</pre></td></tr></table></figure><p>停止所有的容器</p>\n<figure class=\"highlight abap\"><figcaption data-lang=\"ABAP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>docker <span class=\"token keyword\">stop</span> $<span class=\"token punctuation\">(</span>docker ps -aq<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>删除所有的容器</p>\n<figure class=\"highlight abap\"><figcaption data-lang=\"ABAP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>docker rm $<span class=\"token punctuation\">(</span>docker ps -aq<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>删除所有的镜像</p>\n<figure class=\"highlight abap\"><figcaption data-lang=\"ABAP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>docker rmi $<span class=\"token punctuation\">(</span>docker images -q<span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>docker image prune --force --all或者docker image prune -f -a <span class=\"token punctuation\">:</span> 删除所有不使用的镜像  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>docker container prune<span class=\"token punctuation\">:</span> 删除所有停止的容器</pre></td></tr></table></figure><h4 id=\"115网盘也可以通过cookie登录\"><a class=\"anchor\" href=\"#115网盘也可以通过cookie登录\">#</a> 115 网盘也可以通过 cookie 登录</h4>\n<p><strong>1. 安装扩展</strong></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jaHJvbWUuZ29vZ2xlLmNvbS93ZWJzdG9yZS9kZXRhaWwvZWRpdHRoaXNjb29raWUvZm5nbWhubnBpbGhwbGFlZWRpZmhjY2Nlb21jbGdmYmc=\">editthiscookie</span></p>\n<p><strong>Chrome 浏览器也可通过手机 115 扫码登录 115 账号</strong></p>\n<p><strong>2.cookie 设置及导出</strong></p>\n<p><img data-src=\"http://web1.kls.red/webpic/image-20230705165330676.png\" alt=\"image-20230705165330676\" /></p>\n<p><img data-src=\"http://web1.kls.red/webpic/image-20230705165304688.png\" alt=\"image-20230705165304688\" /></p>\n<p><img data-src=\"http://web1.kls.red/webpic/image-20230705165247436.png\" alt=\"image-20230705165247436\" /></p>\n<p>PC:(浏览器建议 chrome，edge，firefox 最新版，不支持 ie 和 115 浏览器)</p>\n<h4 id=\"小白答疑\"><a class=\"anchor\" href=\"#小白答疑\">#</a> 小白答疑：</h4>\n<ol>\n<li>cloudnas 的设计初衷</li>\n</ol>\n<p>cloudnas 的设计初衷是不用下载直接使用的，为在线随机访问文件做了优化，没对下载进行优化。你可以试试不拷贝，直接访问。</p>\n<ol start=\"2\">\n<li>分享出去给别人看会封号吗</li>\n</ol>\n<p>别人访问你的分享看视频的时候，流量是从 115 到你的服务器，再走你的上行带宽到访问者，不会把 115 的直链分享出去</p>\n<ol start=\"3\">\n<li>可否多台设备运行多个 clouddrive？</li>\n</ol>\n<p>这种玩法需要注意一下 115 的异地登录风险，尽量不要异地登录</p>\n<ol start=\"4\">\n<li>何为彻底退出 Cloud Drive ？</li>\n</ol>\n<p>右上角账号那的退出按钮</p>\n<ol start=\"5\">\n<li>可异地登陆否？</li>\n</ol>\n<p>NO! 尽量不要异地运行多个 cloudnas 服务，跑同一个 115 账号。异地访问同一个 cloudnas 服务器没问题，这受控于网盘安全登录，例如：阿里云可在单账号允许 5 个设备登录这种，115 的受限于官方风控。</p>\n<ol start=\"6\">\n<li>Cloud Drive 支持生成 115sha1 吗？</li>\n</ol>\n<p>不支持生成 115sha1</p>\n<ol start=\"7\">\n<li>想不起来密码？</li>\n</ol>\n<p>后续会增加重设密码，但是云端不会保存密码，只保存密码的 md5，所以不会有找回密码的功能，另外需要说明，云盘账号信息是用你自己的密码加密的保存的，所以你忘记了密码的话，云盘账号也就无法找回了，需要重新设置，重置密码之后，所有云盘都需要重新登录了，我们没办法帮你找回你的云盘信息，基于这个考虑，我觉得找回密码其实没有太大意义，找回以后也得从头来过。实在想不起来密码的话，换个邮箱注册也是一样的。所以密码重置功能没有放到很高优先级</p>\n<ol start=\"8\">\n<li>可否加入百度网盘？</li>\n</ol>\n<p>NO 百度网盘以前做过，后来他们改了接口，还抓了做 pandownload 的作者，我就不想碰了</p>\n<ol start=\"9\">\n<li>挂载不上？</li>\n</ol>\n<p>换个盘符试试，要不重启一下服务看看<br />\n windows 服务管理里面，重启名为 CloudDriveService 的服务<br />\n刚安装登录就挂不上？从这里下载 winfsp 安装包手动安装一次试试<br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2JpbGx6aXNzLWdoL3dpbmZzcC9yZWxlYXNlcy9kb3dubG9hZC92MS45L3dpbmZzcC0xLjkuMjEwOTYubXNp\"> Test</span><br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2JpbGx6aXNzLWdoL3dpbmZzcC9yZWxlYXNlcy9kb3dubG9hZC92MS45L3dpbmZzcC0xLjkuMjEwOTYubXNp\">https://github.com/billziss-gh/winfsp/releases/download/v1.9/winfsp-1.9.21096.msi</span></p>\n<ol start=\"10\">\n<li>clouddrive 支持续传否？</li>\n</ol>\n<p>现在的版本 115 已经支持续传了 (大佬很给力)</p>\n<ol start=\"11\">\n<li>从映射盘拷贝 115 文件速度</li>\n</ol>\n<p>速度 3M-5M (群友实测) 单线程单文件速度</p>\n<ol start=\"12\">\n<li>内存空间占用？</li>\n</ol>\n<p>在访问网盘上的文件时，clouddrive 确实在通过网络下载，但是数据放在内存里，不会占用本地空间</p>\n<ol start=\"13\">\n<li>win 挂载 115 网盘后资源管理器经常无响应</li>\n</ol>\n<p>windows 文件管理器默认会获取文件的缩略图，有大量图片的时候尤其慢，解决办法是把文件管理器改成详细列表显示，不让它去生成缩略图</p>\n<ol start=\"14\">\n<li>挂载速度慢？试试整个盘都用详细列表模式</li>\n</ol>\n<p>windows 版各种问题都是文件管理器要去读文件缩略图造成的，整个盘都用详细列表模式就清净了<br />\n<img data-src=\"http://web1.kls.red/webpic/image-20230705165145640.png\" alt=\"image-20230705165145640\" /></p>\n<p>最好把整个盘都设置成常规项目，省得文件管理器去读取图片视频音频的元数据</p>\n<ol start=\"15\">\n<li>115 挂载本地，速度？</li>\n</ol>\n<p>本地网速够的话，看 4K 蓝光没问题</p>\n<ol start=\"16\">\n<li>115 挂载目录里复制到本地速度</li>\n</ol>\n<p>单线程速度 6~8M/s 校验速度比 115 浏览器快不少</p>\n<ol start=\"17\">\n<li>原盘播放效果</li>\n</ol>\n<p>取决于本地速度，网盘速度没问题</p>\n<ol start=\"18\">\n<li>系统设置相关选项作用？</li>\n</ol>\n<p><img data-src=\"http://web1.kls.red/webpic/image-20230705165121506.png\" alt=\"image-20230705165121506\" /></p>\n<p>这里大部分都是内部调试用，最好不要乱改，第一个可以试试，如果去掉的话，不会自动从云盘刷新目录，曾经打开过的文件夹再打开会非常快，但是从别的终端修改过的内容就看不到了，除非手动点 web 界面的刷新按钮</p>\n<ol start=\"19\">\n<li>挂载设置里点击卸载按钮后，刷新不出页面？</li>\n</ol>\n<p>重新安装一遍就行了！</p>\n<ol start=\"20\">\n<li>115 批量导入秒传失败？</li>\n</ol>\n<p>应该排查权限的问题，CloudDrive 的路径默认都是对所有人有权限的，选不出来但是直接输入路径有效，说明 mount CloudDrive 的上级目录有权限<br />\n 115 对秒传请求进行了限速，导致批量导入失败，临时解决方法是在系统设置里把 MaxPreprocessTasks 设为 1</p>\n<h5 id=\"其他\"><a class=\"anchor\" href=\"#其他\">#</a> 其他：</h5>\n<ol>\n<li>\n<p>有些系统 SYS_ADMIN 权限不足，需要 privileged 权限</p>\n</li>\n<li>\n<p>群晖 docker 上 mount 出来的 CloudNAS 目录，可以直接 samba 分享给局域网使用</p>\n</li>\n<li>\n<p>文件夹下载建议直接用 samba 共享出来，自己在系统文件管理器里 ctrl-c, ctrl-v</p>\n</li>\n<li>\n<p>左键单击 (<span class=\"exturl\" data-url=\"aHR0cHM6Ly90Lm1lL2Nsb3VkbmFzY2hhdC85NDc=\">https://t.me/cloudnaschat/947</span>) 文件，可直接下载<br />\n<img data-src=\"http://web1.kls.red/webpic/image-20230705164731959.png\" alt=\"image-20230705164731959\" /></p>\n</li>\n<li>\n<p>Dropextract，Dropshare 这两个有隐藏功能……</p>\n</li>\n<li>\n<p>8 月 4 日 115 妙传限速解决方法<br />\n 115 对秒传请求进行了限速，导致批量导入失败，临时解决方法是在系统设置里把 MaxPreprocessTasks 设为 1</p>\n</li>\n</ol>\n<p>如果有其他问题或建议，欢迎飞机联系开发作者<br />\n<strong>作者电报群：<span class=\"exturl\" data-url=\"aHR0cHM6Ly90Lm1lL2Nsb3VkbmFzY2hhdA==\">https://t.me/cloudnaschat</span></strong></p>\n",
            "tags": [
                "食用系列",
                "Clouddrive",
                "Clouddrive",
                "Openwrt",
                "Docker"
            ]
        },
        {
            "id": "https://kls.red/posts/6346bbd.html",
            "url": "https://kls.red/posts/6346bbd.html",
            "title": "Clouddrive在linux（云主机/vps）下挂载过程",
            "date_published": "2023-07-03T09:12:24.000Z",
            "content_html": "<h4 id=\"基本环境\"><a class=\"anchor\" href=\"#基本环境\">#</a> 基本环境</h4>\n<p><strong>ps：</strong></p>\n<ul>\n<li>VPS（这里指的是网站服务器）或者本地计算机、虚拟机下的 linux 系统：Ubuntu、centos、Debian... 等 借助工具：docker （这里以宝塔面板为基础的图形界面，虽然熟悉后不怎么用，但方便初接触者）</li>\n<li>挂载到网站服务器上，clouddrive 不像其他挂载工具那样，只是分享下载，clouddrive 更纯粹，你可以把它理解成真实的硬盘，如果你 PHP 基础比较好，可以结合给视频站或下载站等使用，这里不多做赘述。</li>\n<li>这里有个问题挂载服务器应当遵守网盘使用条款使用，如果把阿里云盘挂载到其他国家的云服务器上，可能会触发账号的使用机制，阿里云盘条款不允许国外使用，如果在国外云主机使用可能会刷不出来二维码或登录不上，像 115 网盘可能会触发异地登录等风险，只要在国内包括香港，都没什么大问题）</li>\n</ul>\n<p>以下演示仅供初步接触者参考使用，大佬请略过即可，较真抬杠的请进群找大佬们，谢谢支持！</p>\n<h4 id=\"docker项目地址\"><a class=\"anchor\" href=\"#docker项目地址\">#</a> Docker 项目地址</h4>\n<ul>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9odWIuZG9ja2VyLmNvbS9yL2Nsb3VkbmFzL2Nsb3VkZHJpdmU=\">cloudnas/clouddrive</span></p>\n</li>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9odWIuZG9ja2VyLmNvbS9yL2Nsb3VkbmFzL2Nsb3VkZHJpdmUyLXVuc3RhYmxl\">clouddrive2-unstable</span></p>\n</li>\n</ul>\n<h4 id=\"docker部署命令\"><a class=\"anchor\" href=\"#docker部署命令\">#</a> Docker 部署命令</h4>\n<ol>\n<li>根据 clouddrive 的命令，在 ssh 输入命令</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">mkdir</span> <span class=\"token parameter variable\">-p</span> /etc/systemd/system/docker.service.d/</pre></td></tr></table></figure><ul>\n<li>接着</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">cat</span> <span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">EOF<span class=\"token bash punctuation\"> <span class=\"token operator\">></span> /etc/systemd/system/docker.service.d/clear_mount_propagation_flags.conf</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>[Service]</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>MountFlags=shared</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>EOF</span></pre></td></tr></table></figure><ul>\n<li>PS：执行完，没有任何提示就对了！</li>\n</ul>\n<ol>\n<li>拉取 clouddrive 镜像部署</li>\n</ol>\n<p>命令是结合 Ubuntu、centos、Debian 的相通目录结构 选择的目录为： <code>/mnt</code>  下 进行部署 为主机中的映射卷启用共享挂载 <code>mount --make-shared /</code></p>\n<figure class=\"highlight css\"><figcaption data-lang=\"CSS\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>mount --make-shared /</pre></td></tr></table></figure><ul>\n<li>Ps: 可以通过 <code>df -h</code>  命令查看宿主的挂载点，结合使用，例如我要挂载到 <code>/mnt</code>  这个目录下，挂载点在 <code>/</code>  目录下所以命令是上面的 <code>mount --make-shared /</code></li>\n<li>如果过挂在成功把上面这条命令加到开机执行，不然主机重启会导致挂载失败</li>\n</ul>\n<p><img data-src=\"https://img.kls.red/i/2023/07/03/zbf0gi-0.png\" alt=\"img\" /></p>\n<ul>\n<li>\n<p>如果挂载到其他目录下面，把下面 <code>/mnt</code>  的路径 替换成你自己的即可</p>\n<p><strong>CD1：</strong></p>\n</li>\n</ul>\n<figure class=\"highlight lua\"><figcaption data-lang=\"lua\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>docker run <span class=\"token operator\">-</span>d \\</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>      <span class=\"token comment\">--name clouddrive \\</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>      <span class=\"token comment\">--restart unless-stopped \\</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token operator\">-</span>v <span class=\"token operator\">/</span>mnt<span class=\"token operator\">/</span>CloudNAS<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span>CloudNAS<span class=\"token punctuation\">:</span>shared \\</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token operator\">-</span>v <span class=\"token operator\">/</span>mnt<span class=\"token operator\">/</span>Config<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span>Config \\</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token comment\">--network host \\</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token comment\">--pid host \\</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>     <span class=\"token comment\">--privileged \\</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>     <span class=\"token comment\">--device /dev/fuse:/dev/fuse \\</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>     cloudnas<span class=\"token operator\">/</span>clouddrive</pre></td></tr></table></figure><p><strong>CD2：</strong></p>\n<figure class=\"highlight lua\"><figcaption data-lang=\"lua\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>docker run <span class=\"token operator\">-</span>d \\</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>      <span class=\"token comment\">--name clouddrive \\</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>      <span class=\"token comment\">--restart unless-stopped \\</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token comment\">--env CLOUDDRIVE_HOME=/Config \\</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token operator\">-</span>v <span class=\"token operator\">/</span>mnt<span class=\"token operator\">/</span>CloudNAS<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span>CloudNAS<span class=\"token punctuation\">:</span>shared \\</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token operator\">-</span>v <span class=\"token operator\">/</span>mnt<span class=\"token operator\">/</span>Config<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span>Config \\</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token comment\">--network host \\</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token comment\">--pid host \\</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>     <span class=\"token comment\">--privileged \\</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>     <span class=\"token comment\">--device /dev/fuse:/dev/fuse \\</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>     cloudnas<span class=\"token operator\">/</span>clouddrive2<span class=\"token operator\">-</span>unstable</pre></td></tr></table></figure><ul>\n<li>\n<p>执行之后没报错就说明部署成功了</p>\n<p>CD1 入口 IP:9798</p>\n<p>CD2 入口 IP:19798</p>\n</li>\n</ul>\n<h4 id=\"常见问题\"><a class=\"anchor\" href=\"#常见问题\">#</a> 常见问题</h4>\n<p><strong>安装部署后报错</strong>  <code>Error response from daemon: Get https://registry-1.docker.io/v2/: Docker</code>  之类的：</p>\n<ol>\n<li>重新执行该命令重试，有时候是受代理环境或者网络原因造成的</li>\n<li>排除 DNS 解析的问题</li>\n</ol>\n<p><strong>部署后 ip:9798 无法访问</strong></p>\n<ol>\n<li>一种是防火墙放行指定端口</li>\n<li>暴力的方式是直接关闭防火墙命令</li>\n</ol>\n<ul>\n<li>虚拟机 &amp; 本地 linux 下解决方法： centos：停止 firewall 防火墙</li>\n</ul>\n<figure class=\"highlight vbnet\"><figcaption data-lang=\"VB.Net\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>systemctl <span class=\"token keyword\">stop</span> firewalld.service</pre></td></tr></table></figure><p>关闭开机启动 firewall 防火墙命令</p>\n<figure class=\"highlight vbnet\"><figcaption data-lang=\"VB.Net\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>systemctl <span class=\"token keyword\">stop</span> firewalld.service</pre></td></tr></table></figure><ul>\n<li>Ubuntu 关闭防火墙</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> ufw disable</pre></td></tr></table></figure><ul>\n<li>Debian 关闭防火墙</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>/etc/init.d/ufw stop</pre></td></tr></table></figure><p><strong>宝塔面板放行端口，具体百度即可</strong></p>\n<p><strong>vps 服务器可结合上面的方法，或者在安全组中放行 9897 端口，宝塔面板放行该端口</strong></p>\n",
            "tags": [
                "食用系列",
                "Clouddrive",
                "Clouddrive",
                "Linux"
            ]
        },
        {
            "id": "https://kls.red/posts/9a43ef1.html",
            "url": "https://kls.red/posts/9a43ef1.html",
            "title": "X86 openwrt 如何将 CPU 模式设置为性能",
            "date_published": "2023-07-01T13:13:18.802Z",
            "content_html": "<h4 id=\"简述\"><a class=\"anchor\" href=\"#简述\">#</a> <strong>简述</strong></h4>\n<p>很多人在编译后或者好不容易拿到符合自己需求的系统包后，体验一直上不去，甚至有些使用 j1900CPU 感觉还不如硬件路由</p>\n<p>例如，开网页加载慢半拍、视频加载速度上不去的感觉（特别是油管），很大的原因都是由省电模式导致的。</p>\n<p>CPU 频率在编译后，不做优化的情况下。</p>\n<p>性能模式一直是省电模式运行，特别对于硬件配置低、或高配硬件达不到应有体验</p>\n<p><strong>实例：处理器： 英特尔（R） 赛扬（R） J4125 CPU @ 2.00GHz</strong></p>\n<h4 id=\"通过\"><a class=\"anchor\" href=\"#通过\">#</a> <strong>通过</strong></h4>\n<p>命令查询当前频率</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">cat</span> /proc/cpuinfo <span class=\"token operator\">|</span><span class=\"token function\">grep</span> MHz<span class=\"token operator\">|</span><span class=\"token function\">uniq</span></pre></td></tr></table></figure><h4 id=\"结果\"><a class=\"anchor\" href=\"#结果\">#</a> <strong>结果</strong></h4>\n<p>为</p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">cpu MHz</span>         <span class=\"token punctuation\">:</span> <span class=\"token number\">1201.146</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key atrule\">cpu MHz</span>         <span class=\"token punctuation\">:</span> <span class=\"token number\">1200.982</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token key atrule\">cpu MHz</span>         <span class=\"token punctuation\">:</span> <span class=\"token number\">1200.165</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token key atrule\">cpu MHz</span>         <span class=\"token punctuation\">:</span> <span class=\"token number\">1200.076</span></pre></td></tr></table></figure><h4 id=\"命令\"><a class=\"anchor\" href=\"#命令\">#</a> <strong>命令</strong></h4>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">cd</span> /sys/devices/system/cpu/</pre></td></tr></table></figure><p>通过上面命令可以看到核心数<br />\n例如： <code>cpu0 cpu1 cpu2 cpu3 ...</code></p>\n<h4 id=\"查询\"><a class=\"anchor\" href=\"#查询\">#</a> <strong>查询</strong></h4>\n<p>查看当前运行 CPU 模式（这里是 CPU0 为例）</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">cat</span> /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor</pre></td></tr></table></figure><h4 id=\"结果-2\"><a class=\"anchor\" href=\"#结果-2\">#</a> <strong>结果</strong></h4>\n<ul>\n<li>\n<p>powersave （节能模式）</p>\n</li>\n<li>\n<p>performance （性能模式）</p>\n<p>需要说明的是，这里的性能模式，一般是指高频空载，非满载模式，满载类似烤机那种，</p>\n<p>空载只是把 CPU 核心频率以最高频率运行任务，致使硬件性能最大化。</p>\n</li>\n</ul>\n<p>如果是节能模式，我们通过命令对每个核心做性能模式切换调整</p>\n<h4 id=\"调整命令参考\"><a class=\"anchor\" href=\"#调整命令参考\">#</a> <strong>调整命令参考</strong></h4>\n<figure class=\"highlight ruby\"><figcaption data-lang=\"ruby\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>echo performance <span class=\"token operator\">>></span> <span class=\"token operator\">/</span>sys<span class=\"token operator\">/</span>devices<span class=\"token operator\">/</span>system<span class=\"token operator\">/</span>cpu<span class=\"token operator\">/</span>cpufreq<span class=\"token operator\">/</span>policy0<span class=\"token operator\">/</span>scaling_governor</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>echo performance <span class=\"token operator\">>></span> <span class=\"token operator\">/</span>sys<span class=\"token operator\">/</span>devices<span class=\"token operator\">/</span>system<span class=\"token operator\">/</span>cpu<span class=\"token operator\">/</span>cpufreq<span class=\"token operator\">/</span>policy1<span class=\"token operator\">/</span>scaling_governor</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>echo performance <span class=\"token operator\">>></span> <span class=\"token operator\">/</span>sys<span class=\"token operator\">/</span>devices<span class=\"token operator\">/</span>system<span class=\"token operator\">/</span>cpu<span class=\"token operator\">/</span>cpufreq<span class=\"token operator\">/</span>policy2<span class=\"token operator\">/</span>scaling_governor</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>echo performance <span class=\"token operator\">>></span> <span class=\"token operator\">/</span>sys<span class=\"token operator\">/</span>devices<span class=\"token operator\">/</span>system<span class=\"token operator\">/</span>cpu<span class=\"token operator\">/</span>cpufreq<span class=\"token operator\">/</span>policy3<span class=\"token operator\">/</span>scaling_governor</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>echo <span class=\"token number\">2700000</span> <span class=\"token operator\">></span> <span class=\"token operator\">/</span>sys<span class=\"token operator\">/</span>devices<span class=\"token operator\">/</span>system<span class=\"token operator\">/</span>cpu<span class=\"token operator\">/</span>cpufreq<span class=\"token operator\">/</span>policy0<span class=\"token operator\">/</span>scaling_min_freq</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>echo <span class=\"token number\">2700000</span> <span class=\"token operator\">></span> <span class=\"token operator\">/</span>sys<span class=\"token operator\">/</span>devices<span class=\"token operator\">/</span>system<span class=\"token operator\">/</span>cpu<span class=\"token operator\">/</span>cpufreq<span class=\"token operator\">/</span>policy1<span class=\"token operator\">/</span>scaling_min_freq</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>echo <span class=\"token number\">2700000</span> <span class=\"token operator\">></span> <span class=\"token operator\">/</span>sys<span class=\"token operator\">/</span>devices<span class=\"token operator\">/</span>system<span class=\"token operator\">/</span>cpu<span class=\"token operator\">/</span>cpufreq<span class=\"token operator\">/</span>policy2<span class=\"token operator\">/</span>scaling_min_freq</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>echo <span class=\"token number\">2700000</span> <span class=\"token operator\">></span> <span class=\"token operator\">/</span>sys<span class=\"token operator\">/</span>devices<span class=\"token operator\">/</span>system<span class=\"token operator\">/</span>cpu<span class=\"token operator\">/</span>cpufreq<span class=\"token operator\">/</span>policy3<span class=\"token operator\">/</span>scaling_min_freq</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>echo <span class=\"token number\">2700000</span> <span class=\"token operator\">></span> <span class=\"token operator\">/</span>sys<span class=\"token operator\">/</span>devices<span class=\"token operator\">/</span>system<span class=\"token operator\">/</span>cpu<span class=\"token operator\">/</span>cpufreq<span class=\"token operator\">/</span>policy0<span class=\"token operator\">/</span>scaling_min_freq</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>echo <span class=\"token number\">2700000</span> <span class=\"token operator\">></span> <span class=\"token operator\">/</span>sys<span class=\"token operator\">/</span>devices<span class=\"token operator\">/</span>system<span class=\"token operator\">/</span>cpu<span class=\"token operator\">/</span>cpufreq<span class=\"token operator\">/</span>policy1<span class=\"token operator\">/</span>scaling_min_freq</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>echo <span class=\"token number\">2700000</span> <span class=\"token operator\">></span> <span class=\"token operator\">/</span>sys<span class=\"token operator\">/</span>devices<span class=\"token operator\">/</span>system<span class=\"token operator\">/</span>cpu<span class=\"token operator\">/</span>cpufreq<span class=\"token operator\">/</span>policy2<span class=\"token operator\">/</span>scaling_min_freq</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>echo <span class=\"token number\">2700000</span> <span class=\"token operator\">></span> <span class=\"token operator\">/</span>sys<span class=\"token operator\">/</span>devices<span class=\"token operator\">/</span>system<span class=\"token operator\">/</span>cpu<span class=\"token operator\">/</span>cpufreq<span class=\"token operator\">/</span>policy3<span class=\"token operator\">/</span>scaling_min_freq</pre></td></tr></table></figure><p><strong>其他系统上高性能模式，例如 centos 或 ubuntu</strong> <a href=\"http://xn--blog-9d0ix46agy8cj1fne.kls.red/\"><strong>转载请注明 blog.kls.red</strong></a> <strong>.</strong></p>\n",
            "tags": [
                "系统配置",
                "Openwrt",
                "Openwrt",
                "Cpu高频空载模式"
            ]
        }
    ]
}